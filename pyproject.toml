[project]
name = "django-odata"
version = "2.0.0"
description = "OData v4 implementation for Django REST Framework"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Alexandre Busquets", email = "alexandre.busquets@fundcraft.lu"}
]
keywords = ["django", "odata", "rest", "api", "djangorestframework"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "django>=4.2",
    "djangorestframework>=3.12.0",
    "odata-query>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "black>=21.0",
    "flake8>=3.8",
    "isort>=5.0",
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-django>=4.0",
    "pytest-benchmark>=3.4.0",
    "mypy>=0.900",
]

[dependency-groups]
dev = [
    "black>=21.0",
    "flake8>=3.8",
    "isort>=5.0",
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-django>=4.0",
    "pytest-benchmark>=3.4.0",
    "mypy>=0.900",
]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.uv]
package = false

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = "tests.py test_*.py *_tests.py"
addopts = "--verbose --tb=short --no-migrations"
testpaths = ["tests", "example"]
markers = [
    "benchmark: run benchmark tests",
]
