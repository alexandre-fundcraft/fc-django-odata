"""
Auto-generated OData serializers (combined file).
Generated on: 2025-11-01 10:12:57

DO NOT EDIT THIS FILE MANUALLY.
Regenerate using: python manage.py generate_odata_serializer --single

Available options:
  --single   Generate one combined file instead of separate files
  --force    Overwrite existing files without prompting
"""

from ..models import Author
from ..models import BlogPost
from ..models import Category
from django.contrib.auth.models import Group
from django.contrib.auth.models import Permission
from django.contrib.auth.models import User
from django.contrib.contenttypes.models import ContentType
from django_odata.serializers import ODataModelSerializer


class CategorySerializer(ODataModelSerializer):
    """OData serializer for Category model."""

    class Meta:
        model = Category
        fields = [
            "posts",
            "id",
            "name",
            "description",
            "created_at",
            "pk",  # @property
        ]
        expandable_fields = {}



class AuthorSerializer(ODataModelSerializer):
    """OData serializer for Author model."""

    class Meta:
        model = Author
        fields = [
            "id",
            "user",
            "bio",
            "website",
            "avatar",
            "created_at",
            "email",  # @property
            "name",  # @property
            "pk",  # @property
        ]
        expandable_fields = {
            "user": ("example.blog.serializers.UserSerializer", {}),
        }



class UserSerializer(ODataModelSerializer):
    """OData serializer for User model."""

    class Meta:
        model = User
        fields = [
            "id",
            "password",
            "last_login",
            "is_superuser",
            "username",
            "first_name",
            "last_name",
            "email",
            "is_staff",
            "is_active",
            "date_joined",
            "groups",
            "user_permissions",
            "is_anonymous",  # @property
            "is_authenticated",  # @property
            "pk",  # @property
        ]
        expandable_fields = {
            "author": ("django.contrib.auth.serializers.UserSerializer", {}),
            "groups": ("django.contrib.auth.serializers.GroupSerializer", {"many": True}),
            "user_permissions": ("django.contrib.auth.serializers.PermissionSerializer", {"many": True}),
        }



class GroupSerializer(ODataModelSerializer):
    """OData serializer for Group model."""

    class Meta:
        model = Group
        fields = [
            "user",
            "id",
            "name",
            "permissions",
            "pk",  # @property
        ]
        expandable_fields = {
            "permissions": ("django.contrib.auth.serializers.PermissionSerializer", {"many": True}),
        }



class PermissionSerializer(ODataModelSerializer):
    """OData serializer for Permission model."""

    class Meta:
        model = Permission
        fields = [
            "group",
            "user",
            "id",
            "name",
            "content_type",
            "codename",
            "pk",  # @property
        ]
        expandable_fields = {
            "content_type": ("django.contrib.auth.serializers.ContentTypeSerializer", {}),
        }



class BlogPostSerializer(ODataModelSerializer):
    """OData serializer for BlogPost model."""

    class Meta:
        model = BlogPost
        fields = [
            "tag_objects",
            "id",
            "title",
            "slug",
            "content",
            "excerpt",
            "author",
            "status",
            "featured",
            "view_count",
            "rating",
            "created_at",
            "updated_at",
            "published_at",
            "tags",
            "metadata",
            "categories",
            "is_published",  # @property
            "pk",  # @property
            "word_count",  # @property
        ]
        expandable_fields = {
            "author": ("example.blog.serializers.AuthorSerializer", {}),
            "categories": ("example.blog.serializers.CategorySerializer", {"many": True}),
        }



class ContentTypeSerializer(ODataModelSerializer):
    """OData serializer for ContentType model."""

    class Meta:
        model = ContentType
        fields = [
            "id",
            "app_label",
            "model",
            "app_labeled_name",  # @property
            "name",  # @property
            "pk",  # @property
        ]
        expandable_fields = {}
